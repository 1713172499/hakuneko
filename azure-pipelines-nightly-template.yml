# Microsoft Azure Build Pipeline Templates/Jobs
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops
# https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/artifacts-overview?view=azure-devops

steps:

# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops
#- script: echo '##vso[task.setvariable variable=SourceVersionShort]$(Build.SourceVersion | cut -c 1-8)'

# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/node-js?view=azure-devops
- task: NodeTool@0
  displayName: 'Install NodeJS'
  inputs:
    versionSpec: '10.x'

# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/package/npm?view=azure-devops
- task: Npm@1
  displayName: 'Install NPM Packages'
  inputs:
    command: install

- script: npm run build:app
  displayName: 'Build (app)'

- script: npm run build:web
  displayName: 'Build (web)'

# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/archive-files?view=azure-devops
- task: ArchiveFiles@2
  displayName: 'Copy Artifacts (web)'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/build/latest' 
    includeRootFolder: false 
    archiveType: 'tar'
    tarCompression: 'xz'
    archiveFile: '$(Build.ArtifactStagingDirectory)/web-$(Build.SourceVersion).tar.xz' 
    replaceExistingArchive: true

# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/copy-files?view=azure-devops
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/file-matching-patterns
- task: CopyFiles@2
  displayName: 'Copy Artifacts (app)'
  inputs:
    contents: hakuneko-*@(.exe|.zip|.deb|.rpm|.dmg)
    sourceFolder: '$(Build.SourcesDirectory)/build'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: false
    overWrite: true
    flattenFolders: false

# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/publish-build-artifacts?view=azure-devops
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: '$(Agent.OS)-$(Agent.OSArchitecture)_$(Build.BuildNumber)'

- task: PublishPipelineArtifact@1
  inputs:
    path: '$(Build.ArtifactStagingDirectory)'
    artifact: '$(Build.BuildNumber)'

- task: GithubRelease@0
  displayName: 'GitHub Release'
  inputs:
    # NOTE: The service connection to itHub must be configured to use Personal Aaccess Token
    # OAuth regsitered application seems not to work (404 not found when creating release tag)
    gitHubConnection: 'hakuneko-bot@github'
    repositoryName: 'manga-download/hakuneko'
    action: 'edit'
    target: '$(Build.SourceVersion)'
    #tagSource: 'manual'
    #tag: 'nightly-$(Build.BuildNumber)'
    releaseNotesSource: 'input'
    #isDraft: false
    #isPreRelease: true
    addChangeLog: false
    assets: |
        $(Build.ArtifactStagingDirectory)/*.exe
        $(Build.ArtifactStagingDirectory)/*.zip
        $(Build.ArtifactStagingDirectory)/*.deb
        $(Build.ArtifactStagingDirectory)/*.rpm
        $(Build.ArtifactStagingDirectory)/*.dmg